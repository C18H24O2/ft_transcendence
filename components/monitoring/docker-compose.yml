name: ft_trans-monitoring

include:
  - exporters.docker-compose.yml

networks:
  prometheus:
  nginx:
  nginx_exporter:

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services:
  # Prometheus is a monitoring system that scrapes data from
  # other services and stores it in a time series database, to be
  # accessed and used by Grafana.
  prometheus:
    build:
      context: prometheus
      dockerfile: Dockerfile
      args:
        PROM_ADMIN_PASSWD_HASH: ${PROM_ADMIN_PASSWD_HASH}
    env_file: ../../.env
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.config.file=/etc/prometheus/web-config.yml'
      - '--web.external-url=/prometheus/'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - prometheus
      - nginx
    restart: unless-stopped
    healthcheck:
      test: "wget -qO- http://admin:$$PROM_ADMIN_PASSWD@0.0.0.0:9090"
      interval: 5s
      timeout: 5s
      retries: 3

  # Grafana is a dashboarding and data visualization tool.
  grafana:
    build:
      context: grafana
      dockerfile: Dockerfile
      args:
        PROM_ADMIN_PASSWD: ${PROM_ADMIN_PASSWD}
    volumes:
      - grafana_data:/var/lib/grafana
    env_file: ../../.env
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - prometheus
      - nginx
    restart: unless-stopped
    healthcheck:
      test: "curl http://0.0.0.0:3000/api/health | grep -q ok"
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      prometheus:
        condition: service_healthy
