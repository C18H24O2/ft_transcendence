networks:
  prometheus:
  valkey:
  # A linked network with nginx to access internal (metrics) endpoints
  nginx_internal:

volumes:
  nginx_logs:
    driver: local

services:
  # Exports nginx metrics via looking at both the internal endpoint,
  # and scraping nginx's access logs for finer grained metrics.
  # (only because the free version of nginx doesn't have proper metrics, sigh.)
  prometheus-nginx-exporter:
    build: ./prometheus-nginx-exporter
    command:
      - '--target.host=nginx'
      - '--target.port=14321'
      - '--target.path=/nginx_status-internal'
      - '--target.log=/nginx-logs/access.log'
    networks:
      - prometheus
      - nginx_internal
    volumes:
      - nginx_logs:/nginx-logs
    restart: unless-stopped
    depends_on:
      nginx:
        condition: service_healthy

  # Exports system metrics for prometheus
  # Note that this only supports Linux hosts, not windows.
  node-exporter:
    image: prom/node-exporter:v1.8.2
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - prometheus
    restart: unless-stopped

  # Analyzes resource usage and performance characteristics of running containers.
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.51.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /dev/kmsg:/dev/kmsg
    networks:
      - prometheus
    restart: unless-stopped

  # Exports metrics from Valkey
  valkey-exporter:
    image: oliver006/redis_exporter:v1.67.0-alpine
    env_file: ../../.env
    networks:
      - prometheus
      - valkey
    command:
      - '--redis.addr=valkey:6379'
    restart: unless-stopped
    depends_on:
      valkey:
        condition: service_healthy

# Note: There are other containers in the project that provide prometheus metrics endpoints:
# - RabbitMQ
